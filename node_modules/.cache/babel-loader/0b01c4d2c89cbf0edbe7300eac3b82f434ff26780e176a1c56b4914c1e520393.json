{"ast":null,"code":"var _jsxFileName = \"/media/ishanr/New Volume/React/ishan/src/Component/SnakeGame.js\";\nimport React, { Component } from \"react\";\nimport Snake from \"./components/Snake\";\nimport Food from \"./components/Food\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst randomCoordinate = () => {\n  let a = 1;\n  let b = 98;\n  let c = Math.floor(Math.random() * ((b - a + 1 + a) / 2)) * 2;\n  let d = Math.floor(Math.random() * ((b - a + 1 + a) / 2)) * 2;\n  return [c, d];\n};\nclass SnakeGame extends Component {\n  constructor() {\n    super();\n    this.onkeyDown = e => {\n      e = e || window.event;\n      if (this.state.start === true) {\n        switch (e.keyCode) {\n          case 37:\n            this.setState({\n              direction: \"LEFT\"\n            });\n            break;\n          case 38:\n            this.setState({\n              direction: \"UP\"\n            });\n            break;\n          case 39:\n            this.setState({\n              direction: \"RIGHT\"\n            });\n            break;\n          case 40:\n            this.setState({\n              direction: \"DOWN\"\n            });\n            break;\n          case 65:\n            this.setState({\n              direction: \"LEFT\"\n            });\n            break;\n          case 87:\n            this.setState({\n              direction: \"UP\"\n            });\n            break;\n          case 68:\n            this.setState({\n              direction: \"RIGHT\"\n            });\n            break;\n          case 83:\n            this.setState({\n              direction: \"DOWN\"\n            });\n            break;\n          case 32:\n            alert(\"Paused\");\n            break;\n        }\n      }\n    };\n    this.handleKeyPress = () => {\n      if (this.state.start === true) {\n        let snakePos = [...this.state.SnakePosition];\n        let head = snakePos[snakePos.length - 1];\n        switch (this.state.direction) {\n          case \"LEFT\":\n            head = [head[0] - 2, head[1]];\n            break;\n          case \"UP\":\n            head = [head[0], head[1] - 2];\n            break;\n          case \"RIGHT\":\n            head = [head[0] + 2, head[1]];\n            break;\n          case \"DOWN\":\n            head = [head[0], head[1] + 2];\n            break;\n        }\n        snakePos.push(head);\n        snakePos.shift();\n        this.setState({\n          SnakePosition: snakePos\n        });\n      }\n    };\n    this.state = {\n      start: false,\n      speed: 200,\n      direction: \"RIGHT\",\n      food: randomCoordinate(this.start),\n      count: 0,\n      SnakePosition: [[0, 0], [2, 0]]\n    };\n    this.startGame = this.startGame.bind(this); //start game button\n    this.stopGame = this.stopGame.bind(this); //stop game button\n  }\n  startGame() {\n    this.setState({\n      start: true\n    });\n  }\n  stopGame() {\n    this.setState({\n      start: false\n    });\n  }\n  componentDidMount() {\n    setInterval(this.handleKeyPress, this.state.speed);\n    document.onkeydown = this.onkeyDown;\n  }\n  componentDidUpdate() {\n    this.checkIfHitWall();\n    this.checkIt();\n    this.ifFoodEat();\n  }\n  ifFoodEat() {\n    let head = this.state.SnakePosition[this.state.SnakePosition.length - 1];\n    if (this.state.food[0] === head[0] && this.state.food[1] === head[1]) {\n      this.setState(prevState => {\n        return {\n          food: randomCoordinate(),\n          count: prevState.count + 1\n        };\n      });\n      this.enlarge();\n      this.increaseSpeed();\n    }\n  }\n  enlarge() {\n    let snakePos = [...this.state.SnakePosition];\n    snakePos.unshift([snakePos]);\n    this.setState({\n      SnakePosition: snakePos\n    });\n  }\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 10\n      });\n    }\n  }\n  checkIt() {\n    let pos = [...this.state.SnakePosition];\n    let head = pos[pos.length - 1];\n    pos.pop();\n    pos.forEach(dot => {\n      if (head[0] == dot[0] && head[1] == dot[1]) {\n        this.gameOver();\n      }\n    });\n  }\n  checkIfHitWall() {\n    let snakePos = [...this.state.SnakePosition];\n    let head = this.state.SnakePosition[this.state.SnakePosition.length - 1];\n    if (head[0] > 99 || head[1] > 99 || head[0] < 0 || head[1] < 0) {\n      this.gameOver();\n    }\n  }\n  gameOver() {\n    alert(\"Game Over\");\n    this.setState({\n      start: false,\n      count: 0,\n      speed: 200,\n      direction: \"RIGHT\",\n      food: randomCoordinate(),\n      SnakePosition: [[0, 0], [2, 0]]\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"score\",\n        type: \"number\",\n        value: this.state.count,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container snake-Arena\",\n        children: [/*#__PURE__*/_jsxDEV(Snake, {\n          Snakedot: this.state.SnakePosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Food, {\n          food: this.state.food\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        style: {\n          marginTop: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.startGame,\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: this.stopGame,\n          children: \"Pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default SnakeGame;","map":{"version":3,"names":["React","Component","Snake","Food","jsxDEV","_jsxDEV","randomCoordinate","a","b","c","Math","floor","random","d","SnakeGame","constructor","onkeyDown","e","window","event","state","start","keyCode","setState","direction","alert","handleKeyPress","snakePos","SnakePosition","head","length","push","shift","speed","food","count","startGame","bind","stopGame","componentDidMount","setInterval","document","onkeydown","componentDidUpdate","checkIfHitWall","checkIt","ifFoodEat","prevState","enlarge","increaseSpeed","unshift","pos","pop","forEach","dot","gameOver","render","children","className","type","value","disabled","fileName","_jsxFileName","lineNumber","columnNumber","Snakedot","style","marginTop","onClick"],"sources":["/media/ishanr/New Volume/React/ishan/src/Component/SnakeGame.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Snake from \"./components/Snake\";\nimport Food from \"./components/Food\";\n\nconst randomCoordinate = () => {\n  let a = 1;\n  let b = 98;\n  let c = Math.floor(Math.random() * ((b - a + 1 + a) / 2)) * 2;\n  let d = Math.floor(Math.random() * ((b - a + 1 + a) / 2)) * 2;\n  return [c, d];\n};\nclass SnakeGame extends Component {\n  constructor() {\n    super();\n    this.state = {\n      start: false,\n      speed: 200,\n      direction: \"RIGHT\",\n      food: randomCoordinate(this.start),\n      count: 0,\n      SnakePosition: [\n        [0, 0],\n        [2, 0],\n      ],\n    };\n    this.startGame = this.startGame.bind(this) //start game button\n    this.stopGame = this.stopGame.bind(this) //stop game button\n  }\n\n  startGame() {\n    this.setState({\n      start: true\n    })\n  }\n  stopGame() {\n    this.setState({\n      start: false\n    })\n\n  }\n  componentDidMount() {\n    setInterval(this.handleKeyPress, this.state.speed);\n    document.onkeydown = this.onkeyDown;\n  }\n\n  componentDidUpdate() {\n    this.checkIfHitWall();\n    this.checkIt();\n    this.ifFoodEat();\n  }\n  ifFoodEat() {\n    let head = this.state.SnakePosition[this.state.SnakePosition.length - 1];\n    if (this.state.food[0] === head[0] && this.state.food[1] === head[1]) {\n      this.setState(prevState => {\n        return {\n          food: randomCoordinate(),\n          count: prevState.count + 1\n        }\n      });\n      this.enlarge();\n      this.increaseSpeed();\n    }\n  }\n  enlarge() {\n    let snakePos = [...this.state.SnakePosition];\n    snakePos.unshift([snakePos]);\n    this.setState({\n      SnakePosition: snakePos,\n    });\n  }\n  increaseSpeed() {\n    if (this.state.speed > 10) {\n      this.setState({\n        speed: this.state.speed - 10,\n      });\n    }\n  }\n\n  checkIt() {\n    let pos = [...this.state.SnakePosition];\n    let head = pos[pos.length - 1];\n    pos.pop();\n    pos.forEach((dot) => {\n      if (head[0] == dot[0] && head[1] == dot[1]) {\n        this.gameOver();\n      }\n    });\n  }\n  checkIfHitWall() {\n    let snakePos = [...this.state.SnakePosition];\n    let head = this.state.SnakePosition[this.state.SnakePosition.length - 1];\n    if (head[0] > 99 || head[1] > 99 || head[0] < 0 || head[1] < 0) {\n      this.gameOver();\n    }\n  }\n  gameOver() {\n    alert(\"Game Over\");\n    this.setState({\n      start: false,\n      count: 0,\n      speed: 200,\n      direction: \"RIGHT\",\n      food: randomCoordinate(),\n      SnakePosition: [\n        [0, 0],\n        [2, 0],\n      ],\n    });\n  }\n  onkeyDown = (e) => {\n    e = e || window.event;\n    if (this.state.start === true) {\n      switch (e.keyCode) {\n        case 37:\n          this.setState({ direction: \"LEFT\" });\n          break;\n        case 38:\n          this.setState({ direction: \"UP\" });\n          break;\n        case 39:\n          this.setState({ direction: \"RIGHT\" });\n          break;\n        case 40:\n          this.setState({ direction: \"DOWN\" });\n          break;\n        case 65:\n          this.setState({ direction: \"LEFT\" });\n          break;\n        case 87:\n          this.setState({ direction: \"UP\" });\n          break;\n        case 68:\n          this.setState({ direction: \"RIGHT\" });\n          break;\n        case 83:\n          this.setState({ direction: \"DOWN\" });\n          break;\n        case 32:\n          alert(\"Paused\");\n          break;\n      }\n    }\n  };\n  handleKeyPress = () => {\n    if (this.state.start === true) {\n      let snakePos = [...this.state.SnakePosition];\n      let head = snakePos[snakePos.length - 1];\n      switch (this.state.direction) {\n        case \"LEFT\":\n          head = [head[0] - 2, head[1]];\n          break;\n        case \"UP\":\n          head = [head[0], head[1] - 2];\n          break;\n        case \"RIGHT\":\n          head = [head[0] + 2, head[1]];\n          break;\n        case \"DOWN\":\n          head = [head[0], head[1] + 2];\n          break;\n      }\n      snakePos.push(head);\n      snakePos.shift();\n      this.setState({\n        SnakePosition: snakePos,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <input className=\"score\" type=\"number\" value={this.state.count} disabled />\n        <div className=\"container snake-Arena\">\n          <Snake Snakedot={this.state.SnakePosition} />\n          <Food food={this.state.food} />\n        </div>\n\n        <div className=\"button-container\" style={{ marginTop: '40px' }}>\n          <button className=\"btn\" onClick={this.startGame}>Play</button>\n          <button className=\"btn\" onClick={this.stopGame}>Pause</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SnakeGame;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,EAAE;EACV,IAAIC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,CAACJ,CAAC,GAAGD,CAAC,GAAG,CAAC,GAAGA,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7D,IAAIM,CAAC,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAI,CAACJ,CAAC,GAAGD,CAAC,GAAG,CAAC,GAAGA,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;EAC7D,OAAO,CAACE,CAAC,EAAEI,CAAC,CAAC;AACf,CAAC;AACD,MAAMC,SAAS,SAASb,SAAS,CAAC;EAChCc,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KAgGVC,SAAS,GAAIC,CAAC,IAAK;MACjBA,CAAC,GAAGA,CAAC,IAAIC,MAAM,CAACC,KAAK;MACrB,IAAI,IAAI,CAACC,KAAK,CAACC,KAAK,KAAK,IAAI,EAAE;QAC7B,QAAQJ,CAAC,CAACK,OAAO;UACf,KAAK,EAAE;YACL,IAAI,CAACC,QAAQ,CAAC;cAAEC,SAAS,EAAE;YAAO,CAAC,CAAC;YACpC;UACF,KAAK,EAAE;YACL,IAAI,CAACD,QAAQ,CAAC;cAAEC,SAAS,EAAE;YAAK,CAAC,CAAC;YAClC;UACF,KAAK,EAAE;YACL,IAAI,CAACD,QAAQ,CAAC;cAAEC,SAAS,EAAE;YAAQ,CAAC,CAAC;YACrC;UACF,KAAK,EAAE;YACL,IAAI,CAACD,QAAQ,CAAC;cAAEC,SAAS,EAAE;YAAO,CAAC,CAAC;YACpC;UACF,KAAK,EAAE;YACL,IAAI,CAACD,QAAQ,CAAC;cAAEC,SAAS,EAAE;YAAO,CAAC,CAAC;YACpC;UACF,KAAK,EAAE;YACL,IAAI,CAACD,QAAQ,CAAC;cAAEC,SAAS,EAAE;YAAK,CAAC,CAAC;YAClC;UACF,KAAK,EAAE;YACL,IAAI,CAACD,QAAQ,CAAC;cAAEC,SAAS,EAAE;YAAQ,CAAC,CAAC;YACrC;UACF,KAAK,EAAE;YACL,IAAI,CAACD,QAAQ,CAAC;cAAEC,SAAS,EAAE;YAAO,CAAC,CAAC;YACpC;UACF,KAAK,EAAE;YACLC,KAAK,CAAC,QAAQ,CAAC;YACf;QACJ;MACF;IACF,CAAC;IAAA,KACDC,cAAc,GAAG,MAAM;MACrB,IAAI,IAAI,CAACN,KAAK,CAACC,KAAK,KAAK,IAAI,EAAE;QAC7B,IAAIM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAACP,KAAK,CAACQ,aAAa,CAAC;QAC5C,IAAIC,IAAI,GAAGF,QAAQ,CAACA,QAAQ,CAACG,MAAM,GAAG,CAAC,CAAC;QACxC,QAAQ,IAAI,CAACV,KAAK,CAACI,SAAS;UAC1B,KAAK,MAAM;YACTK,IAAI,GAAG,CAACA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B;UACF,KAAK,IAAI;YACPA,IAAI,GAAG,CAACA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC7B;UACF,KAAK,OAAO;YACVA,IAAI,GAAG,CAACA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B;UACF,KAAK,MAAM;YACTA,IAAI,GAAG,CAACA,IAAI,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC7B;QACJ;QACAF,QAAQ,CAACI,IAAI,CAACF,IAAI,CAAC;QACnBF,QAAQ,CAACK,KAAK,CAAC,CAAC;QAChB,IAAI,CAACT,QAAQ,CAAC;UACZK,aAAa,EAAED;QACjB,CAAC,CAAC;MACJ;IACF,CAAC;IAzJC,IAAI,CAACP,KAAK,GAAG;MACXC,KAAK,EAAE,KAAK;MACZY,KAAK,EAAE,GAAG;MACVT,SAAS,EAAE,OAAO;MAClBU,IAAI,EAAE5B,gBAAgB,CAAC,IAAI,CAACe,KAAK,CAAC;MAClCc,KAAK,EAAE,CAAC;MACRP,aAAa,EAAE,CACb,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC;IAEV,CAAC;IACD,IAAI,CAACQ,SAAS,GAAG,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC,EAAC;IAC3C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACD,IAAI,CAAC,IAAI,CAAC,EAAC;EAC3C;EAEAD,SAASA,CAAA,EAAG;IACV,IAAI,CAACb,QAAQ,CAAC;MACZF,KAAK,EAAE;IACT,CAAC,CAAC;EACJ;EACAiB,QAAQA,CAAA,EAAG;IACT,IAAI,CAACf,QAAQ,CAAC;MACZF,KAAK,EAAE;IACT,CAAC,CAAC;EAEJ;EACAkB,iBAAiBA,CAAA,EAAG;IAClBC,WAAW,CAAC,IAAI,CAACd,cAAc,EAAE,IAAI,CAACN,KAAK,CAACa,KAAK,CAAC;IAClDQ,QAAQ,CAACC,SAAS,GAAG,IAAI,CAAC1B,SAAS;EACrC;EAEA2B,kBAAkBA,CAAA,EAAG;IACnB,IAAI,CAACC,cAAc,CAAC,CAAC;IACrB,IAAI,CAACC,OAAO,CAAC,CAAC;IACd,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB;EACAA,SAASA,CAAA,EAAG;IACV,IAAIjB,IAAI,GAAG,IAAI,CAACT,KAAK,CAACQ,aAAa,CAAC,IAAI,CAACR,KAAK,CAACQ,aAAa,CAACE,MAAM,GAAG,CAAC,CAAC;IACxE,IAAI,IAAI,CAACV,KAAK,CAACc,IAAI,CAAC,CAAC,CAAC,KAAKL,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAACT,KAAK,CAACc,IAAI,CAAC,CAAC,CAAC,KAAKL,IAAI,CAAC,CAAC,CAAC,EAAE;MACpE,IAAI,CAACN,QAAQ,CAACwB,SAAS,IAAI;QACzB,OAAO;UACLb,IAAI,EAAE5B,gBAAgB,CAAC,CAAC;UACxB6B,KAAK,EAAEY,SAAS,CAACZ,KAAK,GAAG;QAC3B,CAAC;MACH,CAAC,CAAC;MACF,IAAI,CAACa,OAAO,CAAC,CAAC;MACd,IAAI,CAACC,aAAa,CAAC,CAAC;IACtB;EACF;EACAD,OAAOA,CAAA,EAAG;IACR,IAAIrB,QAAQ,GAAG,CAAC,GAAG,IAAI,CAACP,KAAK,CAACQ,aAAa,CAAC;IAC5CD,QAAQ,CAACuB,OAAO,CAAC,CAACvB,QAAQ,CAAC,CAAC;IAC5B,IAAI,CAACJ,QAAQ,CAAC;MACZK,aAAa,EAAED;IACjB,CAAC,CAAC;EACJ;EACAsB,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAAC7B,KAAK,CAACa,KAAK,GAAG,EAAE,EAAE;MACzB,IAAI,CAACV,QAAQ,CAAC;QACZU,KAAK,EAAE,IAAI,CAACb,KAAK,CAACa,KAAK,GAAG;MAC5B,CAAC,CAAC;IACJ;EACF;EAEAY,OAAOA,CAAA,EAAG;IACR,IAAIM,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC/B,KAAK,CAACQ,aAAa,CAAC;IACvC,IAAIC,IAAI,GAAGsB,GAAG,CAACA,GAAG,CAACrB,MAAM,GAAG,CAAC,CAAC;IAC9BqB,GAAG,CAACC,GAAG,CAAC,CAAC;IACTD,GAAG,CAACE,OAAO,CAAEC,GAAG,IAAK;MACnB,IAAIzB,IAAI,CAAC,CAAC,CAAC,IAAIyB,GAAG,CAAC,CAAC,CAAC,IAAIzB,IAAI,CAAC,CAAC,CAAC,IAAIyB,GAAG,CAAC,CAAC,CAAC,EAAE;QAC1C,IAAI,CAACC,QAAQ,CAAC,CAAC;MACjB;IACF,CAAC,CAAC;EACJ;EACAX,cAAcA,CAAA,EAAG;IACf,IAAIjB,QAAQ,GAAG,CAAC,GAAG,IAAI,CAACP,KAAK,CAACQ,aAAa,CAAC;IAC5C,IAAIC,IAAI,GAAG,IAAI,CAACT,KAAK,CAACQ,aAAa,CAAC,IAAI,CAACR,KAAK,CAACQ,aAAa,CAACE,MAAM,GAAG,CAAC,CAAC;IACxE,IAAID,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAIA,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,IAAIA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;MAC9D,IAAI,CAAC0B,QAAQ,CAAC,CAAC;IACjB;EACF;EACAA,QAAQA,CAAA,EAAG;IACT9B,KAAK,CAAC,WAAW,CAAC;IAClB,IAAI,CAACF,QAAQ,CAAC;MACZF,KAAK,EAAE,KAAK;MACZc,KAAK,EAAE,CAAC;MACRF,KAAK,EAAE,GAAG;MACVT,SAAS,EAAE,OAAO;MAClBU,IAAI,EAAE5B,gBAAgB,CAAC,CAAC;MACxBsB,aAAa,EAAE,CACb,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,CAAC,CAAC,EAAE,CAAC,CAAC;IAEV,CAAC,CAAC;EACJ;EA6DA4B,MAAMA,CAAA,EAAG;IACP,oBACEnD,OAAA;MAAAoD,QAAA,gBACEpD,OAAA;QAAOqD,SAAS,EAAC,OAAO;QAACC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAE,IAAI,CAACxC,KAAK,CAACe,KAAM;QAAC0B,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3E5D,OAAA;QAAKqD,SAAS,EAAC,uBAAuB;QAAAD,QAAA,gBACpCpD,OAAA,CAACH,KAAK;UAACgE,QAAQ,EAAE,IAAI,CAAC9C,KAAK,CAACQ;QAAc;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7C5D,OAAA,CAACF,IAAI;UAAC+B,IAAI,EAAE,IAAI,CAACd,KAAK,CAACc;QAAK;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eAEN5D,OAAA;QAAKqD,SAAS,EAAC,kBAAkB;QAACS,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAX,QAAA,gBAC7DpD,OAAA;UAAQqD,SAAS,EAAC,KAAK;UAACW,OAAO,EAAE,IAAI,CAACjC,SAAU;UAAAqB,QAAA,EAAC;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9D5D,OAAA;UAAQqD,SAAS,EAAC,KAAK;UAACW,OAAO,EAAE,IAAI,CAAC/B,QAAS;UAAAmB,QAAA,EAAC;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAenD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}